# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

- name: Copy artifact for deployment job
  run: |
    mkdir -p deploy
    if [ -d ".next/standalone" ]; then
      cp -r .next/standalone/. ./deploy
    else
      echo ".next/standalone directory not found"
    fi

    if [ -d "public" ]; then
      cp -r ./public ./deploy
    else
      echo "public directory not found, skipping"
    fi

    if [ -d ".next/static" ]; then
      mkdir -p ./deploy/.next/static
      cp -r .next/static/. ./deploy/.next/static
    else
      echo ".next/static directory not found"
    fi

    cp package.json ./deploy/ || echo "package.json not found"
    cp next.config.mjs ./deploy/ || echo "next.config.mjs not found"

# このスクリプトは、デプロイに必要なファイルを `deploy` ディレクトリにコピーします。
# Next.jsプロジェクトのビルド成果物、`standalone` ディレクトリ、`public` ディレクトリ、`static` ディレクトリ、
# `package.json`、`next.config.mjs` をコピーします。
# 存在しないファイルがある場合は、エラーメッセージを表示します。

- name: Zip artifact for deployment
  run: zip release.zip ./deploy -r

# このスクリプトは、`deploy` ディレクトリの内容を `release.zip` というZipファイルに圧縮します。
# `-r` オプションは、ディレクトリを再帰的に圧縮することを示します。


